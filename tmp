# consume messages from kafka
docker-compose exec kafka ./opt/bitnami/kafka/bin/kafka-console-consumer.sh --bootstrap-server kafka:9092 --topic test --from-beginning

# produce messages to kafka
docker-compose exec kafka ./opt/bitnami/kafka/bin/kafka-console-producer.sh --broker-list kafka:9092 --topic test

# create topic
docker-compose exec kafka ./opt/bitnami/kafka/bin/kafka-topics.sh --create --bootstrap-server kafka:9092 --replication-factor 1 --partitions 1 --topic test-1

# list topics
docker-compose exec kafka ./opt/bitnami/kafka/bin/kafka-topics.sh --list --bootstrap-server kafka:9092

# see if connector is running
curl -H "Accept:application/json" localhost:8083/

# get connector list
curl -H "Accept:application/json" localhost:8083/connectors

# start connector
curl -i -X POST -H "Accept:application/json" -H "Content-Type:application/json" localhost:8083/connectors/ -d @connect/upload-connector.json
// "schema.history.internal.kafka.bootstrap.servers": "kafka:9092",
// "schema.history.internal.kafka.topic": "schemahistory.upload"

# /status
curl -i -X GET -H "Accept:application/json" localhost:8083/connectors/upload-connector

# delete connector
curl -i -X DELETE -H "Accept:application/json" localhost:8083/connectors/upload-connector

Thing to complete:
- [ ] Get the reposnse from speech service and save it to the database
- [ ] Send the processed files as socket messages to the client
